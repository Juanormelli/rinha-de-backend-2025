user www-data;
worker_processes auto;
worker_rlimit_nofile 100000;

events {
    use epoll;
    worker_connections 350;
}

http {
    error_log /dev/null crit;
    access_log off;
    client_body_buffer_size 1K;
    client_header_buffer_size 1k;
    keepalive_timeout 65;
    keepalive_requests 150;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    
    lua_shared_dict shared_data 1m;
    
    upstream api {
        server unix:/tmp/api1.sock;
        server unix:/tmp/api2.sock;
        keepalive 32;
    }
   
    server {
        listen 9999;
        
        location = /payments {
            content_by_lua_block {
                ngx.req.read_body()
                local data = ngx.req.get_body_data()

                ngx.status = 200
                ngx.say("OK")
                ngx.flush(true)

                if data then
                    ngx.timer.at(0, function()
                        local counter = ngx.shared.shared_data:get("rr_counter") or 0
                        local selected_socket = counter % 2 == 0 and "unix:/tmp/api1.sock" or "unix:/tmp/api2.sock"
                        
                        ngx.shared.shared_data:set("rr_counter", counter + 1)
                        
                        local sock = ngx.socket.tcp()
                        sock:settimeout(50)
                        
                        if sock:connect(selected_socket) then
                            local request = "POST /payments HTTP/1.1\r\n" ..
                                            "Content-Type: application/json\r\n" ..
                                            "Content-Length: " .. #data .. "\r\n" ..
                                            "Connection: close\r\n\r\n" ..
                                            data
                                            
                            sock:send(request)
                        end
                        sock:close()
                    end)
                end
            }
        }
             
        location / {
            proxy_pass http://api;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }
    }
}